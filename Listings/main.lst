


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         
    4 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    5 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         
   11 00000000         ; Declarações EQU - Defines
   12 00000000         ;<NOME>         EQU <VALOR>
   13 00000000         ; ========================
   14 00000000         
   15 00000000         ; Estados
   16 00000000 00000001 
                       ABERTO  EQU              0x1
   17 00000000 00000002 
                       FECHANDO
                               EQU              0x2
   18 00000000 00000003 
                       FECHADO EQU              0x3
   19 00000000 00000004 
                       ABRINDO EQU              0x4
   20 00000000 00000005 
                       TRAVADO EQU              0x5
   21 00000000         
   22 00000000         ; ------------------------------------------------------
                       -------------------------
   23 00000000         ; Área de Dados - Declarações de variáveis
   24 00000000                 AREA             DATA, ALIGN=2
   25 00000000         ; Se alguma variável for chamada em outro arquivo
   26 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   27 00000000         ; partir de outro arquivo
   28 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   29 00000000         ; de <tam> bytes a partir da primeira 
   30 00000000         ; posição da RAM  
   31 00000000         
   32 00000000         ; ------------------------------------------------------
                       -------------------------
   33 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   34 00000000         ;                  código
   35 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   36 00000000         
   37 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   38 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   39 00000000         ; outro arquivo. No caso startup.s



ARM Macro Assembler    Page 2 


   40 00000000         
   41 00000000         ; Se chamar alguma função externa 
   42 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   43 00000000         ; função <func>
   44 00000000                 IMPORT           PLL_Init
   45 00000000                 IMPORT           SysTick_Init
   46 00000000                 IMPORT           GPIO_Init
   47 00000000                 IMPORT           PortA_Output
   48 00000000                 IMPORT           PortP_Output
   49 00000000                 IMPORT           PortQ_Output
   50 00000000                 IMPORT           PortJ_Input
   51 00000000         
   52 00000000                 IMPORT           Led
   53 00000000                 IMPORT           Turn0n_TransistorQ1
   54 00000000                 IMPORT           Turn0ff_TransistorQ1
   55 00000000         
   56 00000000                 IMPORT           Lcd_Init
   57 00000000                 IMPORT           LcdMsgCofreAberto
   58 00000000         
   59 00000000                 IMPORT           CofreAberto
   60 00000000                 IMPORT           CofreFechando
   61 00000000                 IMPORT           CofreFechado
   62 00000000                 IMPORT           CofreAbrindo
   63 00000000                 IMPORT           CofreTravado
   64 00000000         
   65 00000000         
   66 00000000         ; ------------------------------------------------------
                       -------------------------
   67 00000000         ; Função main()
   68 00000000         Start
   69 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   70 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   71 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   72 0000000C         
   73 0000000C F04F 0C01       MOV              R12, #ABERTO ;estado do cofre
   74 00000010 F04F 0B00       MOV              R11, #0     ;estado anterior do
                                                             cofre
   75 00000014 F04F 0A00       MOV              R10, #0     ;contador caractere
                                                            s senha
   76 00000018 F04F 0900       MOV              R9, #0      ;guarda a senha tem
                                                            porariamente
   77 0000001C F04F 0800       MOV              R8, #0      ;contador deslocame
                                                            nto esquerda msg (a
                                                            berto) / contador m
                                                            udar estado led (tr
                                                            avado)
   78 00000020 F04F 0700       MOV              R7, #0      ;contador senhas in
                                                            corretas (fechado) 
                                                            / bits dos leds (tr
                                                            avado)
   79 00000024 F04F 0600       MOV              R6, #0      ;flag pra liberar p



ARM Macro Assembler    Page 3 


                                                            ra colocar senha me
                                                            stra
   80 00000028         
   81 00000028 F7FF FFFE       BL               Lcd_Init
   82 0000002C F7FF FFFE       BL               LcdMsgCofreAberto
   83 00000030         MainLoop
   84 00000030 F1BC 0F01       CMP              R12, #ABERTO
   85 00000034 BF08 F7FF 
              FFFE             BLEQ             CofreAberto
   86 0000003A         
   87 0000003A F1BC 0F02       CMP              R12, #FECHANDO
   88 0000003E BF08 F7FF 
              FFFE             BLEQ             CofreFechando
   89 00000044         
   90 00000044 F1BC 0F03       CMP              R12, #FECHADO
   91 00000048 BF08 F7FF 
              FFFE             BLEQ             CofreFechado
   92 0000004E         
   93 0000004E F1BC 0F04       CMP              R12, #ABRINDO
   94 00000052 BF08 F7FF 
              FFFE             BLEQ             CofreAbrindo
   95 00000058         
   96 00000058 F1BC 0F05       CMP              R12, #TRAVADO
   97 0000005C BF08 F7FF 
              FFFE             BLEQ             CofreTravado
   98 00000062         
   99 00000062 E7E5            B                MainLoop    ;Volta para o laço 
                                                            principal
  100 00000064         
  101 00000064         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  102 00000064         ; Fim do Arquivo
  103 00000064         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  104 00000064                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  105 00000064                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\admin\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000030

Symbol: MainLoop
   Definitions
      At line 83 in file main.s
   Uses
      At line 99 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 68 in file main.s
   Uses
      At line 38 in file main.s
Comment: Start used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABERTO 00000001

Symbol: ABERTO
   Definitions
      At line 16 in file main.s
   Uses
      At line 73 in file main.s
      At line 84 in file main.s

ABRINDO 00000004

Symbol: ABRINDO
   Definitions
      At line 19 in file main.s
   Uses
      At line 93 in file main.s
Comment: ABRINDO used once
FECHADO 00000003

Symbol: FECHADO
   Definitions
      At line 18 in file main.s
   Uses
      At line 90 in file main.s
Comment: FECHADO used once
FECHANDO 00000002

Symbol: FECHANDO
   Definitions
      At line 17 in file main.s
   Uses
      At line 87 in file main.s
Comment: FECHANDO used once
TRAVADO 00000005

Symbol: TRAVADO
   Definitions
      At line 20 in file main.s
   Uses
      At line 96 in file main.s
Comment: TRAVADO used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CofreAberto 00000000

Symbol: CofreAberto
   Definitions
      At line 59 in file main.s
   Uses
      At line 85 in file main.s
Comment: CofreAberto used once
CofreAbrindo 00000000

Symbol: CofreAbrindo
   Definitions
      At line 62 in file main.s
   Uses
      At line 94 in file main.s
Comment: CofreAbrindo used once
CofreFechado 00000000

Symbol: CofreFechado
   Definitions
      At line 61 in file main.s
   Uses
      At line 91 in file main.s
Comment: CofreFechado used once
CofreFechando 00000000

Symbol: CofreFechando
   Definitions
      At line 60 in file main.s
   Uses
      At line 88 in file main.s
Comment: CofreFechando used once
CofreTravado 00000000

Symbol: CofreTravado
   Definitions
      At line 63 in file main.s
   Uses
      At line 97 in file main.s
Comment: CofreTravado used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 71 in file main.s
Comment: GPIO_Init used once
LcdMsgCofreAberto 00000000

Symbol: LcdMsgCofreAberto
   Definitions
      At line 57 in file main.s
   Uses
      At line 82 in file main.s
Comment: LcdMsgCofreAberto used once
Lcd_Init 00000000

Symbol: Lcd_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 56 in file main.s
   Uses
      At line 81 in file main.s
Comment: Lcd_Init used once
Led 00000000

Symbol: Led
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: Led unused
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 69 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: PortA_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 49 in file main.s
   Uses
      None
Comment: PortQ_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 45 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 70 in file main.s
Comment: SysTick_Init used once
Turn0ff_TransistorQ1 00000000

Symbol: Turn0ff_TransistorQ1
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: Turn0ff_TransistorQ1 unused
Turn0n_TransistorQ1 00000000

Symbol: Turn0n_TransistorQ1
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: Turn0n_TransistorQ1 unused
17 symbols
360 symbols in table

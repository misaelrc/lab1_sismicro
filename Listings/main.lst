


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         
   17 00000000 0000000F 
                       DIG0_PQ EQU              2_1111
   18 00000000 00000030 
                       DIG0_PA EQU              2_00110000
   19 00000000 00000006 
                       DIG1_PQ EQU              2_0110
   20 00000000 00000000 
                       DIG1_PA EQU              2_00000000
   21 00000000 0000000B 
                       DIG2_PQ EQU              2_1011
   22 00000000 00000050 
                       DIG2_PA EQU              2_01010000
   23 00000000 0000000F 
                       DIG3_PQ EQU              2_1111
   24 00000000 00000040 
                       DIG3_PA EQU              2_01000000
   25 00000000 00000006 
                       DIG4_PQ EQU              2_0110
   26 00000000 00000060 
                       DIG4_PA EQU              2_01100000
   27 00000000 0000000D 
                       DIG5_PQ EQU              2_1101
   28 00000000 00000060 
                       DIG5_PA EQU              2_01100000
   29 00000000 0000000D 
                       DIG6_PQ EQU              2_1101
   30 00000000 00000070 
                       DIG6_PA EQU              2_01110000
   31 00000000 00000007 
                       DIG7_PQ EQU              2_0111
   32 00000000 00000000 
                       DIG7_PA EQU              2_00000000
   33 00000000 0000000F 
                       DIG8_PQ EQU              2_1111
   34 00000000 00000070 
                       DIG8_PA EQU              2_01110000
   35 00000000 00000007 
                       DIG9_PQ EQU              2_0111



ARM Macro Assembler    Page 2 


   36 00000000 00000060 
                       DIG9_PA EQU              2_01100000
   37 00000000         
   38 00000000         ; ------------------------------------------------------
                       -------------------------
   39 00000000         ; Área de Dados - Declarações de variáveis
   40 00000000                 AREA             DATA, ALIGN=2
   41 00000000         ; Se alguma variável for chamada em outro arquivo
   42 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   43 00000000         ; partir de outro arquivo
   44 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   45 00000000         ; de <tam> bytes a partir da primeira 
   46 00000000         ; posição da RAM  
   47 00000000         
   48 00000000         ; ------------------------------------------------------
                       -------------------------
   49 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   50 00000000         ;                  código
   51 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000         
   53 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   54 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   55 00000000         ; outro arquivo. No caso startup.s
   56 00000000         
   57 00000000         ; Se chamar alguma função externa 
   58 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   59 00000000         ; função <func>
   60 00000000                 IMPORT           PLL_Init
   61 00000000                 IMPORT           SysTick_Init
   62 00000000                 IMPORT           SysTick_Wait1ms
   63 00000000                 IMPORT           GPIO_Init
   64 00000000                 IMPORT           PortA_Output
   65 00000000                 IMPORT           PortB_Output
   66 00000000                 IMPORT           PortP_Output
   67 00000000                 IMPORT           PortQ_Output
   68 00000000                 IMPORT           PortJ_Input
   69 00000000         
   70 00000000                 IMPORT           Digito_0
   71 00000000                 IMPORT           Digito_1
   72 00000000                 IMPORT           Digito_2
   73 00000000                 IMPORT           Digito_3
   74 00000000                 IMPORT           Digito_4
   75 00000000                 IMPORT           Digito_5
   76 00000000                 IMPORT           Digito_6
   77 00000000                 IMPORT           Digito_7
   78 00000000                 IMPORT           Digito_8
   79 00000000                 IMPORT           Digito_9
   80 00000000                 IMPORT           Display_Dezena
   81 00000000                 IMPORT           Display_Unidade
   82 00000000         
   83 00000000         



ARM Macro Assembler    Page 3 


   84 00000000         ; ------------------------------------------------------
                       -------------------------
   85 00000000         ; Função main()
   86 00000000         Start
   87 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   88 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   89 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   90 0000000C         
   91 0000000C F04F 0B01       MOV              R11, #1     ;passo da contagem
   92 00000010 F04F 0A00       MOV              R10, #0     ;contador
   93 00000014 F04F 0900       MOV              R9, #0      ;estado --> 0 = fun
                                                            cionando / 1 = paus
                                                            ado
   94 00000018         
   95 00000018         MainLoop
   96 00000018         ; ****************************************
   97 00000018         ; Escrever código que lê o estado da chave, se ela estiv
                       er desativada apaga o LED
   98 00000018         ; Se estivar ativada chama a subrotina Pisca_LED
   99 00000018         ; ****************************************
  100 00000018 F7FF FFFE       BL               Display_Dezena
  101 0000001C F7FF FFFE       BL               Display_Unidade
  102 00000020         
  103 00000020 F1B9 0F00       CMP              R9, #0
  104 00000024 D108            BNE              Pausado
  105 00000026         ; se não tiver pausado executa aqui
  106 00000026 F1BA 0F63       CMP              R10, #99
  107 0000002A BF8C            ITE              HI
  108 0000002C F04F 0A00       MOVHI            R10, #0
  109 00000030 44DA            ADDLS            R10, R10, R11
  110 00000032         
  111 00000032         
  112 00000032 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
  113 00000036 E002            B                Verifica_Nenhuma
  114 00000038         
  115 00000038         Pausado
  116 00000038         ;TODO - verificar estado
  117 00000038         ;se tiver pausado, piscar o led e ficar em loop
  118 00000038         ; se não, fazer os incrementos de contagem e led andando
                       
  119 00000038         
  120 00000038         
  121 00000038         ;BL PortJ_Input
  122 00000038 F000 F80D       BL               Pisca_Led
  123 0000003C E7EC            B                MainLoop
  124 0000003E         
  125 0000003E         Verifica_Nenhuma
  126 0000003E 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr



ARM Macro Assembler    Page 4 


                                                            essionada
  127 00000040 D100            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
  128 00000042         ;TODO - Guardar estado das chaves
  129 00000042 E7E9            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
  130 00000044         Verifica_SW1
  131 00000044 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
  132 00000046 D100            BNE              Verifica_SW2 ;Se o teste falhou
                                                            , pula
  133 00000048         ;TODO - Verificar se sw1 já não estava acionado antes
  134 00000048         ;TODO - Fazer incremento de passo e análise se é maior q
                       ue 9 para voltar a 1
  135 00000048 E7E6            B                MainLoop    ;Volta para o laço 
                                                            principal
  136 0000004A         Verifica_SW2
  137 0000004A 2801            CMP              R0, #2_00000001 ;Verifica se so
                                                            mente a chave SW2 e
                                                            stá pressionada
  138 0000004C D100            BNE              Verifica_Ambas ;Se o teste falh
                                                            ou, pula
  139 0000004E         ;TODO - Verificar se sw2 já não estava acionado antes
  140 0000004E         ;TODO - Pausar a contagem
  141 0000004E E7E3            B                MainLoop    ;Volta para o laço 
                                                            principal 
  142 00000050         Verifica_Ambas
  143 00000050 2800            CMP              R0, #2_00000000 ;Verifica se am
                                                            bas as chaves estão
                                                             pressionadas
  144 00000052 D1E1            BNE              MainLoop    ;Se o teste falhou,
                                                             pula
  145 00000054         
  146 00000054 E7E0            B                MainLoop    ;Volta para o laço 
                                                            principal
  147 00000056         ; MOV R0, #2_00100000 
  148 00000056         ; BL PortB_Output 
  149 00000056         ; 
  150 00000056         ; BL Digito_0
  151 00000056         ; BL Digito_1
  152 00000056         ; BL Digito_2
  153 00000056         ; BL Digito_3
  154 00000056         ; BL Digito_4
  155 00000056         ; BL Digito_5
  156 00000056         ; BL Digito_6
  157 00000056         ; BL Digito_7
  158 00000056         ; BL Digito_8
  159 00000056         ; BL Digito_9
  160 00000056         ; B MainLoop
  161 00000056         
  162 00000056         
  163 00000056         
  164 00000056         



ARM Macro Assembler    Page 5 


  165 00000056         
  166 00000056         
  167 00000056         ; Função Pisca_Led
  168 00000056         ; Parâmetro de entrada: Não tem
  169 00000056         ; Parâmetro de saída: Não tem
  170 00000056         *********************************
  171 00000056         Pisca_Led
  172 00000056 B500            PUSH             {LR}
  173 00000058 F04F 000F       MOV              R0, #2_1111 ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o setando os bits [
                                                            Q3-Q0]
  174 0000005C F7FF FFFE       BL               PortQ_Output ;Chamar a função p
                                                            ara acender os LEDs
                                                             5, 6, 7 e 8
  175 00000060 F04F 000F       MOV              R0, #2_1111 ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o setando os bits [
                                                            A7-A4]
  176 00000064 F7FF FFFE       BL               PortA_Output ;Chamar a função p
                                                            ara acender os LEDs
                                                             1, 2, 3 e 4
  177 00000068         
  178 00000068 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 500ms
  179 0000006C F7FF FFFE       BL               SysTick_Wait1ms
  180 00000070 F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando os bits 
                                                            [Q3-Q0]
  181 00000074 F7FF FFFE       BL               PortQ_Output ;Chamar a rotina p
                                                            ara apagar os LEDs 
                                                            5, 6, 7 e 8
  182 00000078 F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando os bits 
                                                            [A7-A4]
  183 0000007C F7FF FFFE       BL               PortA_Output ;Chamar a rotina p
                                                            ara apagar os LEDs 
                                                            1, 2, 3 e 4
  184 00000080 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 500ms
  185 00000084 F7FF FFFE       BL               SysTick_Wait1ms
  186 00000088 F85D EB04       POP              {LR}
  187 0000008C 4770            BX               LR
  188 0000008E         
  189 0000008E         ; APAGAR FUNCOES COMENTADAS
  190 0000008E         
  191 0000008E         ;-------------------------------------------------------
                       -------------------------
  192 0000008E         ; Função Digito_0
  193 0000008E         ; Parâmetro de entrada: Não tem
  194 0000008E         ; Parâmetro de saída: Não tem
  195 0000008E         *********************************
  196 0000008E         ;Digito_0
  197 0000008E         ; PUSH{LR}
  198 0000008E         ; MOV R0, #DIG0_PQ 
  199 0000008E         ; BL PortQ_Output 
  200 0000008E         ; MOV R0, #DIG0_PA 



ARM Macro Assembler    Page 6 


  201 0000008E         ; BL PortA_Output 
  202 0000008E         ; POP{LR}
  203 0000008E         ; BX LR
  204 0000008E         
  205 0000008E         ;-------------------------------------------------------
                       -------------------------
  206 0000008E         ; Função Digito_1
  207 0000008E         ; Parâmetro de entrada: Não tem
  208 0000008E         ; Parâmetro de saída: Não tem
  209 0000008E         *********************************
  210 0000008E         ;Digito_1
  211 0000008E         ; PUSH{LR}
  212 0000008E         ; MOV R0, #DIG1_PQ 
  213 0000008E         ; BL PortQ_Output 
  214 0000008E         ; MOV R0, #DIG1_PA 
  215 0000008E         ; BL PortA_Output 
  216 0000008E         ; POP{LR}
  217 0000008E         ; BX LR
  218 0000008E         
  219 0000008E         ;-------------------------------------------------------
                       -------------------------
  220 0000008E         ; Função Digito_2
  221 0000008E         ; Parâmetro de entrada: Não tem
  222 0000008E         ; Parâmetro de saída: Não tem
  223 0000008E         *********************************
  224 0000008E         ;Digito_2
  225 0000008E         ; PUSH{LR}
  226 0000008E         ; MOV R0, #DIG2_PQ 
  227 0000008E         ; BL PortQ_Output 
  228 0000008E         ; MOV R0, #DIG2_PA 
  229 0000008E         ; BL PortA_Output 
  230 0000008E         ; POP{LR}
  231 0000008E         ; BX LR
  232 0000008E         
  233 0000008E         ;-------------------------------------------------------
                       -------------------------
  234 0000008E         ; Função Digito_3
  235 0000008E         ; Parâmetro de entrada: Não tem
  236 0000008E         ; Parâmetro de saída: Não tem
  237 0000008E         *********************************
  238 0000008E         ;Digito_3
  239 0000008E         ; PUSH{LR}
  240 0000008E         ; MOV R0, #DIG3_PQ 
  241 0000008E         ; BL PortQ_Output 
  242 0000008E         ; MOV R0, #DIG3_PA 
  243 0000008E         ; BL PortA_Output 
  244 0000008E         ; POP{LR}
  245 0000008E         ; BX LR
  246 0000008E         
  247 0000008E         ;-------------------------------------------------------
                       -------------------------
  248 0000008E         ; Função Digito_4
  249 0000008E         ; Parâmetro de entrada: Não tem
  250 0000008E         ; Parâmetro de saída: Não tem
  251 0000008E         *********************************
  252 0000008E         ;Digito_4
  253 0000008E         ; PUSH{LR}
  254 0000008E         ; MOV R0, #DIG4_PQ 
  255 0000008E         ; BL PortQ_Output 



ARM Macro Assembler    Page 7 


  256 0000008E         ; MOV R0, #DIG4_PA 
  257 0000008E         ; BL PortA_Output 
  258 0000008E         ; POP{LR}
  259 0000008E         ; BX LR
  260 0000008E         
  261 0000008E         ;-------------------------------------------------------
                       -------------------------
  262 0000008E         ; Função Digito_5
  263 0000008E         ; Parâmetro de entrada: Não tem
  264 0000008E         ; Parâmetro de saída: Não tem
  265 0000008E         *********************************
  266 0000008E         ;Digito_5
  267 0000008E         ; PUSH{LR}
  268 0000008E         ; MOV R0, #DIG5_PQ 
  269 0000008E         ; BL PortQ_Output 
  270 0000008E         ; MOV R0, #DIG5_PA 
  271 0000008E         ; BL PortA_Output 
  272 0000008E         ; POP{LR}
  273 0000008E         ; BX LR
  274 0000008E         ; 
  275 0000008E         ;-------------------------------------------------------
                       -------------------------
  276 0000008E         ; Função Digito_6
  277 0000008E         ; Parâmetro de entrada: Não tem
  278 0000008E         ; Parâmetro de saída: Não tem
  279 0000008E         *********************************
  280 0000008E         ;Digito_6
  281 0000008E         ; PUSH{LR}
  282 0000008E         ; MOV R0, #DIG6_PQ 
  283 0000008E         ; BL PortQ_Output 
  284 0000008E         ; MOV R0, #DIG6_PA 
  285 0000008E         ; BL PortA_Output 
  286 0000008E         ; POP{LR}
  287 0000008E         ; BX LR
  288 0000008E         
  289 0000008E         ;-------------------------------------------------------
                       -------------------------
  290 0000008E         ; Função Digito_7
  291 0000008E         ; Parâmetro de entrada: Não tem
  292 0000008E         ; Parâmetro de saída: Não tem
  293 0000008E         *********************************
  294 0000008E         ;Digito_7
  295 0000008E         ; PUSH{LR}
  296 0000008E         ; MOV R0, #DIG7_PQ 
  297 0000008E         ; BL PortQ_Output 
  298 0000008E         ; MOV R0, #DIG7_PA 
  299 0000008E         ; BL PortA_Output 
  300 0000008E         ; POP{LR}
  301 0000008E         ; BX LR
  302 0000008E         
  303 0000008E         ;-------------------------------------------------------
                       -------------------------
  304 0000008E         ; Função Digito_8
  305 0000008E         ; Parâmetro de entrada: Não tem
  306 0000008E         ; Parâmetro de saída: Não tem
  307 0000008E         *********************************
  308 0000008E         ;Digito_8
  309 0000008E         ; PUSH{LR}
  310 0000008E         ; MOV R0, #DIG8_PQ 



ARM Macro Assembler    Page 8 


  311 0000008E         ; BL PortQ_Output 
  312 0000008E         ; MOV R0, #DIG8_PA 
  313 0000008E         ; BL PortA_Output 
  314 0000008E         ; POP{LR}
  315 0000008E         ; BX LR
  316 0000008E         
  317 0000008E         ;-------------------------------------------------------
                       -------------------------
  318 0000008E         ; Função Digito_9
  319 0000008E         ; Parâmetro de entrada: Não tem
  320 0000008E         ; Parâmetro de saída: Não tem
  321 0000008E         *********************************
  322 0000008E         ;Digito_9
  323 0000008E         ; PUSH{LR}
  324 0000008E         ; MOV R0, #DIG9_PQ 
  325 0000008E         ; BL PortQ_Output 
  326 0000008E         ; MOV R0, #DIG9_PA 
  327 0000008E         ; BL PortA_Output 
  328 0000008E         ; POP{LR}
  329 0000008E         ; BX LR
  330 0000008E         
  331 0000008E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  332 0000008E         ; Fim do Arquivo
  333 0000008E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  334 0000008E 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  335 00000090                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\admin\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000018

Symbol: MainLoop
   Definitions
      At line 95 in file main.s
   Uses
      At line 123 in file main.s
      At line 129 in file main.s
      At line 135 in file main.s
      At line 141 in file main.s
      At line 144 in file main.s
      At line 146 in file main.s

Pausado 00000038

Symbol: Pausado
   Definitions
      At line 115 in file main.s
   Uses
      At line 104 in file main.s
Comment: Pausado used once
Pisca_Led 00000056

Symbol: Pisca_Led
   Definitions
      At line 171 in file main.s
   Uses
      At line 122 in file main.s
Comment: Pisca_Led used once
Start 00000000

Symbol: Start
   Definitions
      At line 86 in file main.s
   Uses
      At line 54 in file main.s
Comment: Start used once
Verifica_Ambas 00000050

Symbol: Verifica_Ambas
   Definitions
      At line 142 in file main.s
   Uses
      At line 138 in file main.s
Comment: Verifica_Ambas used once
Verifica_Nenhuma 0000003E

Symbol: Verifica_Nenhuma
   Definitions
      At line 125 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 113 in file main.s
Comment: Verifica_Nenhuma used once
Verifica_SW1 00000044

Symbol: Verifica_SW1
   Definitions
      At line 130 in file main.s
   Uses
      At line 127 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 0000004A

Symbol: Verifica_SW2
   Definitions
      At line 136 in file main.s
   Uses
      At line 132 in file main.s
Comment: Verifica_SW2 used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIG0_PA 00000030

Symbol: DIG0_PA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DIG0_PA unused
DIG0_PQ 0000000F

Symbol: DIG0_PQ
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: DIG0_PQ unused
DIG1_PA 00000000

Symbol: DIG1_PA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DIG1_PA unused
DIG1_PQ 00000006

Symbol: DIG1_PQ
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: DIG1_PQ unused
DIG2_PA 00000050

Symbol: DIG2_PA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DIG2_PA unused
DIG2_PQ 0000000B

Symbol: DIG2_PQ
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DIG2_PQ unused
DIG3_PA 00000040

Symbol: DIG3_PA
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: DIG3_PA unused
DIG3_PQ 0000000F

Symbol: DIG3_PQ



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DIG3_PQ unused
DIG4_PA 00000060

Symbol: DIG4_PA
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: DIG4_PA unused
DIG4_PQ 00000006

Symbol: DIG4_PQ
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: DIG4_PQ unused
DIG5_PA 00000060

Symbol: DIG5_PA
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: DIG5_PA unused
DIG5_PQ 0000000D

Symbol: DIG5_PQ
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: DIG5_PQ unused
DIG6_PA 00000070

Symbol: DIG6_PA
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: DIG6_PA unused
DIG6_PQ 0000000D

Symbol: DIG6_PQ
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: DIG6_PQ unused
DIG7_PA 00000000

Symbol: DIG7_PA
   Definitions
      At line 32 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: DIG7_PA unused
DIG7_PQ 00000007

Symbol: DIG7_PQ
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: DIG7_PQ unused
DIG8_PA 00000070

Symbol: DIG8_PA
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: DIG8_PA unused
DIG8_PQ 0000000F

Symbol: DIG8_PQ
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: DIG8_PQ unused
DIG9_PA 00000060

Symbol: DIG9_PA
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DIG9_PA unused
DIG9_PQ 00000007

Symbol: DIG9_PQ
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: DIG9_PQ unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Digito_0 00000000

Symbol: Digito_0
   Definitions
      At line 70 in file main.s
   Uses
      None
Comment: Digito_0 unused
Digito_1 00000000

Symbol: Digito_1
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: Digito_1 unused
Digito_2 00000000

Symbol: Digito_2
   Definitions
      At line 72 in file main.s
   Uses
      None
Comment: Digito_2 unused
Digito_3 00000000

Symbol: Digito_3
   Definitions
      At line 73 in file main.s
   Uses
      None
Comment: Digito_3 unused
Digito_4 00000000

Symbol: Digito_4
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: Digito_4 unused
Digito_5 00000000

Symbol: Digito_5
   Definitions
      At line 75 in file main.s
   Uses
      None
Comment: Digito_5 unused
Digito_6 00000000

Symbol: Digito_6
   Definitions
      At line 76 in file main.s
   Uses
      None
Comment: Digito_6 unused
Digito_7 00000000

Symbol: Digito_7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 77 in file main.s
   Uses
      None
Comment: Digito_7 unused
Digito_8 00000000

Symbol: Digito_8
   Definitions
      At line 78 in file main.s
   Uses
      None
Comment: Digito_8 unused
Digito_9 00000000

Symbol: Digito_9
   Definitions
      At line 79 in file main.s
   Uses
      None
Comment: Digito_9 unused
Display_Dezena 00000000

Symbol: Display_Dezena
   Definitions
      At line 80 in file main.s
   Uses
      At line 100 in file main.s
Comment: Display_Dezena used once
Display_Unidade 00000000

Symbol: Display_Unidade
   Definitions
      At line 81 in file main.s
   Uses
      At line 101 in file main.s
Comment: Display_Unidade used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 63 in file main.s
   Uses
      At line 89 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 60 in file main.s
   Uses
      At line 87 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 64 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 176 in file main.s
      At line 183 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 68 in file main.s
   Uses
      At line 112 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 67 in file main.s
   Uses
      At line 174 in file main.s
      At line 181 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 88 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 62 in file main.s
   Uses
      At line 179 in file main.s
      At line 185 in file main.s

21 symbols
385 symbols in table

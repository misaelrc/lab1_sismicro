


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         
   17 00000000 0000000F 
                       DIG0_PQ EQU              2_1111
   18 00000000 00000030 
                       DIG0_PA EQU              2_00110000
   19 00000000 00000006 
                       DIG1_PQ EQU              2_0110
   20 00000000 00000000 
                       DIG1_PA EQU              2_00000000
   21 00000000 0000000B 
                       DIG2_PQ EQU              2_1011
   22 00000000 00000050 
                       DIG2_PA EQU              2_01010000
   23 00000000 0000000F 
                       DIG3_PQ EQU              2_1111
   24 00000000 00000040 
                       DIG3_PA EQU              2_01000000
   25 00000000 00000006 
                       DIG4_PQ EQU              2_0110
   26 00000000 00000060 
                       DIG4_PA EQU              2_01100000
   27 00000000 0000000D 
                       DIG5_PQ EQU              2_1101
   28 00000000 00000060 
                       DIG5_PA EQU              2_01100000
   29 00000000 0000000D 
                       DIG6_PQ EQU              2_1101
   30 00000000 00000070 
                       DIG6_PA EQU              2_01110000
   31 00000000 00000007 
                       DIG7_PQ EQU              2_0111
   32 00000000 00000000 
                       DIG7_PA EQU              2_00000000
   33 00000000 0000000F 
                       DIG8_PQ EQU              2_1111
   34 00000000 00000070 
                       DIG8_PA EQU              2_01110000
   35 00000000 00000007 
                       DIG9_PQ EQU              2_0111



ARM Macro Assembler    Page 2 


   36 00000000 00000060 
                       DIG9_PA EQU              2_01100000
   37 00000000         
   38 00000000         ; ------------------------------------------------------
                       -------------------------
   39 00000000         ; Área de Dados - Declarações de variáveis
   40 00000000                 AREA             DATA, ALIGN=2
   41 00000000         ; Se alguma variável for chamada em outro arquivo
   42 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   43 00000000         ; partir de outro arquivo
   44 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   45 00000000         ; de <tam> bytes a partir da primeira 
   46 00000000         ; posição da RAM  
   47 00000000         
   48 00000000         ; ------------------------------------------------------
                       -------------------------
   49 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   50 00000000         ;                  código
   51 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000         
   53 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   54 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   55 00000000         ; outro arquivo. No caso startup.s
   56 00000000         
   57 00000000         ; Se chamar alguma função externa 
   58 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   59 00000000         ; função <func>
   60 00000000                 IMPORT           PLL_Init
   61 00000000                 IMPORT           SysTick_Init
   62 00000000                 IMPORT           SysTick_Wait1ms
   63 00000000                 IMPORT           GPIO_Init
   64 00000000                 IMPORT           PortA_Output
   65 00000000                 IMPORT           PortB_Output
   66 00000000                 IMPORT           PortP_Output
   67 00000000                 IMPORT           PortQ_Output
   68 00000000                 IMPORT           PortJ_Input
   69 00000000         
   70 00000000                 IMPORT           Digito_0
   71 00000000                 IMPORT           Digito_1
   72 00000000                 IMPORT           Digito_2
   73 00000000                 IMPORT           Digito_3
   74 00000000                 IMPORT           Digito_4
   75 00000000                 IMPORT           Digito_5
   76 00000000                 IMPORT           Digito_6
   77 00000000                 IMPORT           Digito_7
   78 00000000                 IMPORT           Digito_8
   79 00000000                 IMPORT           Digito_9
   80 00000000                 IMPORT           Display_Dezena
   81 00000000                 IMPORT           Display_Unidade
   82 00000000         
   83 00000000         



ARM Macro Assembler    Page 3 


   84 00000000         ; ------------------------------------------------------
                       -------------------------
   85 00000000         ; Função main()
   86 00000000         Start
   87 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   88 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   89 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   90 0000000C         
   91 0000000C F04F 0B01       MOV              R11, #1     ;passo da contagem
   92 00000010 F04F 0A00       MOV              R10, #0     ;contador
   93 00000014 F04F 0900       MOV              R9, #0      ;estado --> 0 = fun
                                                            cionando / 1 = paus
                                                            ado
   94 00000018         
   95 00000018         MainLoop
   96 00000018         ; ****************************************
   97 00000018         ; Escrever código que lê o estado da chave, se ela estiv
                       er desativada apaga o LED
   98 00000018         ; Se estivar ativada chama a subrotina Pisca_LED
   99 00000018         ; ****************************************
  100 00000018 F7FF FFFE       BL               Display_Dezena
  101 0000001C F7FF FFFE       BL               Display_Unidade
  102 00000020         ;TODO - verificar estado
  103 00000020         ;se tiver pausado, piscar o led e ficar em loop
  104 00000020         ; se não, fazer os incrementos de contagem e led andando
                       
  105 00000020         
  106 00000020         
  107 00000020 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
  108 00000024         Verifica_Nenhuma
  109 00000024 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
  110 00000026 D100            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
  111 00000028         ;TODO - Guardar estado das chaves
  112 00000028 E7F6            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
  113 0000002A         Verifica_SW1
  114 0000002A 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
  115 0000002C D100            BNE              Verifica_SW2 ;Se o teste falhou
                                                            , pula



ARM Macro Assembler    Page 4 


  116 0000002E         ;TODO - Verificar se sw1 já não estava acionado antes
  117 0000002E         ;TODO - Fazer incremento de passo e análise se é maior q
                       ue 9 para voltar a 1
  118 0000002E E7F3            B                MainLoop    ;Volta para o laço 
                                                            principal
  119 00000030         Verifica_SW2
  120 00000030 2801            CMP              R0, #2_00000001 ;Verifica se so
                                                            mente a chave SW2 e
                                                            stá pressionada
  121 00000032 D100            BNE              Verifica_Ambas ;Se o teste falh
                                                            ou, pula
  122 00000034         ;TODO - Verificar se sw2 já não estava acionado antes
  123 00000034         ;TODO - Pausar a contagem
  124 00000034 E7F0            B                MainLoop    ;Volta para o laço 
                                                            principal 
  125 00000036         Verifica_Ambas
  126 00000036 2800            CMP              R0, #2_00000000 ;Verifica se am
                                                            bas as chaves estão
                                                             pressionadas
  127 00000038 D1EE            BNE              MainLoop    ;Se o teste falhou,
                                                             pula
  128 0000003A         
  129 0000003A E7ED            B                MainLoop    ;Volta para o laço 
                                                            principal
  130 0000003C         ; MOV R0, #2_00100000 
  131 0000003C         ; BL PortB_Output 
  132 0000003C         ; 
  133 0000003C         ; BL Digito_0
  134 0000003C         ; BL Digito_1
  135 0000003C         ; BL Digito_2
  136 0000003C         ; BL Digito_3
  137 0000003C         ; BL Digito_4
  138 0000003C         ; BL Digito_5
  139 0000003C         ; BL Digito_6
  140 0000003C         ; BL Digito_7
  141 0000003C         ; BL Digito_8
  142 0000003C         ; BL Digito_9
  143 0000003C E7EC            B                MainLoop
  144 0000003E         
  145 0000003E         
  146 0000003E         
  147 0000003E         
  148 0000003E         
  149 0000003E         
  150 0000003E         ; Função Pisca_Led
  151 0000003E         ; Parâmetro de entrada: Não tem
  152 0000003E         ; Parâmetro de saída: Não tem
  153 0000003E         *********************************
  154 0000003E         Pisca_Led
  155 0000003E B500            PUSH             {LR}
  156 00000040 F04F 000F       MOV              R0, #2_1111 ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o setando os bits [
                                                            Q3-Q0]
  157 00000044 F7FF FFFE       BL               PortQ_Output ;Chamar a função p
                                                            ara acender os LEDs
                                                             5, 6, 7 e 8
  158 00000048 F04F 000F       MOV              R0, #2_1111 ;Setar o parâmetro 
                                                            de entrada da funçã



ARM Macro Assembler    Page 5 


                                                            o setando os bits [
                                                            A7-A4]
  159 0000004C F7FF FFFE       BL               PortA_Output ;Chamar a função p
                                                            ara acender os LEDs
                                                             1, 2, 3 e 4
  160 00000050         
  161 00000050 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 500ms
  162 00000054 F7FF FFFE       BL               SysTick_Wait1ms
  163 00000058 F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando os bits 
                                                            [Q3-Q0]
  164 0000005C F7FF FFFE       BL               PortQ_Output ;Chamar a rotina p
                                                            ara apagar os LEDs 
                                                            5, 6, 7 e 8
  165 00000060 F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando os bits 
                                                            [A7-A4]
  166 00000064 F7FF FFFE       BL               PortA_Output ;Chamar a rotina p
                                                            ara apagar os LEDs 
                                                            1, 2, 3 e 4
  167 00000068 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 500ms
  168 0000006C F7FF FFFE       BL               SysTick_Wait1ms
  169 00000070 F85D EB04       POP              {LR}
  170 00000074 4770            BX               LR
  171 00000076         
  172 00000076         ; APAGAR FUNCOES COMENTADAS
  173 00000076         
  174 00000076         ;-------------------------------------------------------
                       -------------------------
  175 00000076         ; Função Digito_0
  176 00000076         ; Parâmetro de entrada: Não tem
  177 00000076         ; Parâmetro de saída: Não tem
  178 00000076         *********************************
  179 00000076         ;Digito_0
  180 00000076         ; PUSH{LR}
  181 00000076         ; MOV R0, #DIG0_PQ 
  182 00000076         ; BL PortQ_Output 
  183 00000076         ; MOV R0, #DIG0_PA 
  184 00000076         ; BL PortA_Output 
  185 00000076         ; POP{LR}
  186 00000076         ; BX LR
  187 00000076         
  188 00000076         ;-------------------------------------------------------
                       -------------------------
  189 00000076         ; Função Digito_1
  190 00000076         ; Parâmetro de entrada: Não tem
  191 00000076         ; Parâmetro de saída: Não tem
  192 00000076         *********************************
  193 00000076         ;Digito_1
  194 00000076         ; PUSH{LR}
  195 00000076         ; MOV R0, #DIG1_PQ 
  196 00000076         ; BL PortQ_Output 
  197 00000076         ; MOV R0, #DIG1_PA 
  198 00000076         ; BL PortA_Output 
  199 00000076         ; POP{LR}



ARM Macro Assembler    Page 6 


  200 00000076         ; BX LR
  201 00000076         
  202 00000076         ;-------------------------------------------------------
                       -------------------------
  203 00000076         ; Função Digito_2
  204 00000076         ; Parâmetro de entrada: Não tem
  205 00000076         ; Parâmetro de saída: Não tem
  206 00000076         *********************************
  207 00000076         ;Digito_2
  208 00000076         ; PUSH{LR}
  209 00000076         ; MOV R0, #DIG2_PQ 
  210 00000076         ; BL PortQ_Output 
  211 00000076         ; MOV R0, #DIG2_PA 
  212 00000076         ; BL PortA_Output 
  213 00000076         ; POP{LR}
  214 00000076         ; BX LR
  215 00000076         
  216 00000076         ;-------------------------------------------------------
                       -------------------------
  217 00000076         ; Função Digito_3
  218 00000076         ; Parâmetro de entrada: Não tem
  219 00000076         ; Parâmetro de saída: Não tem
  220 00000076         *********************************
  221 00000076         ;Digito_3
  222 00000076         ; PUSH{LR}
  223 00000076         ; MOV R0, #DIG3_PQ 
  224 00000076         ; BL PortQ_Output 
  225 00000076         ; MOV R0, #DIG3_PA 
  226 00000076         ; BL PortA_Output 
  227 00000076         ; POP{LR}
  228 00000076         ; BX LR
  229 00000076         
  230 00000076         ;-------------------------------------------------------
                       -------------------------
  231 00000076         ; Função Digito_4
  232 00000076         ; Parâmetro de entrada: Não tem
  233 00000076         ; Parâmetro de saída: Não tem
  234 00000076         *********************************
  235 00000076         ;Digito_4
  236 00000076         ; PUSH{LR}
  237 00000076         ; MOV R0, #DIG4_PQ 
  238 00000076         ; BL PortQ_Output 
  239 00000076         ; MOV R0, #DIG4_PA 
  240 00000076         ; BL PortA_Output 
  241 00000076         ; POP{LR}
  242 00000076         ; BX LR
  243 00000076         
  244 00000076         ;-------------------------------------------------------
                       -------------------------
  245 00000076         ; Função Digito_5
  246 00000076         ; Parâmetro de entrada: Não tem
  247 00000076         ; Parâmetro de saída: Não tem
  248 00000076         *********************************
  249 00000076         ;Digito_5
  250 00000076         ; PUSH{LR}
  251 00000076         ; MOV R0, #DIG5_PQ 
  252 00000076         ; BL PortQ_Output 
  253 00000076         ; MOV R0, #DIG5_PA 
  254 00000076         ; BL PortA_Output 



ARM Macro Assembler    Page 7 


  255 00000076         ; POP{LR}
  256 00000076         ; BX LR
  257 00000076         ; 
  258 00000076         ;-------------------------------------------------------
                       -------------------------
  259 00000076         ; Função Digito_6
  260 00000076         ; Parâmetro de entrada: Não tem
  261 00000076         ; Parâmetro de saída: Não tem
  262 00000076         *********************************
  263 00000076         ;Digito_6
  264 00000076         ; PUSH{LR}
  265 00000076         ; MOV R0, #DIG6_PQ 
  266 00000076         ; BL PortQ_Output 
  267 00000076         ; MOV R0, #DIG6_PA 
  268 00000076         ; BL PortA_Output 
  269 00000076         ; POP{LR}
  270 00000076         ; BX LR
  271 00000076         
  272 00000076         ;-------------------------------------------------------
                       -------------------------
  273 00000076         ; Função Digito_7
  274 00000076         ; Parâmetro de entrada: Não tem
  275 00000076         ; Parâmetro de saída: Não tem
  276 00000076         *********************************
  277 00000076         ;Digito_7
  278 00000076         ; PUSH{LR}
  279 00000076         ; MOV R0, #DIG7_PQ 
  280 00000076         ; BL PortQ_Output 
  281 00000076         ; MOV R0, #DIG7_PA 
  282 00000076         ; BL PortA_Output 
  283 00000076         ; POP{LR}
  284 00000076         ; BX LR
  285 00000076         
  286 00000076         ;-------------------------------------------------------
                       -------------------------
  287 00000076         ; Função Digito_8
  288 00000076         ; Parâmetro de entrada: Não tem
  289 00000076         ; Parâmetro de saída: Não tem
  290 00000076         *********************************
  291 00000076         ;Digito_8
  292 00000076         ; PUSH{LR}
  293 00000076         ; MOV R0, #DIG8_PQ 
  294 00000076         ; BL PortQ_Output 
  295 00000076         ; MOV R0, #DIG8_PA 
  296 00000076         ; BL PortA_Output 
  297 00000076         ; POP{LR}
  298 00000076         ; BX LR
  299 00000076         
  300 00000076         ;-------------------------------------------------------
                       -------------------------
  301 00000076         ; Função Digito_9
  302 00000076         ; Parâmetro de entrada: Não tem
  303 00000076         ; Parâmetro de saída: Não tem
  304 00000076         *********************************
  305 00000076         ;Digito_9
  306 00000076         ; PUSH{LR}
  307 00000076         ; MOV R0, #DIG9_PQ 
  308 00000076         ; BL PortQ_Output 
  309 00000076         ; MOV R0, #DIG9_PA 



ARM Macro Assembler    Page 8 


  310 00000076         ; BL PortA_Output 
  311 00000076         ; POP{LR}
  312 00000076         ; BX LR
  313 00000076         
  314 00000076         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  315 00000076         ; Fim do Arquivo
  316 00000076         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  317 00000076 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  318 00000078                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\admin\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000018

Symbol: MainLoop
   Definitions
      At line 95 in file main.s
   Uses
      At line 112 in file main.s
      At line 118 in file main.s
      At line 124 in file main.s
      At line 127 in file main.s
      At line 129 in file main.s
      At line 143 in file main.s

Pisca_Led 0000003E

Symbol: Pisca_Led
   Definitions
      At line 154 in file main.s
   Uses
      None
Comment: Pisca_Led unused
Start 00000000

Symbol: Start
   Definitions
      At line 86 in file main.s
   Uses
      At line 54 in file main.s
Comment: Start used once
Verifica_Ambas 00000036

Symbol: Verifica_Ambas
   Definitions
      At line 125 in file main.s
   Uses
      At line 121 in file main.s
Comment: Verifica_Ambas used once
Verifica_Nenhuma 00000024

Symbol: Verifica_Nenhuma
   Definitions
      At line 108 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 0000002A

Symbol: Verifica_SW1
   Definitions
      At line 113 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 110 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 00000030

Symbol: Verifica_SW2
   Definitions
      At line 119 in file main.s
   Uses
      At line 115 in file main.s
Comment: Verifica_SW2 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIG0_PA 00000030

Symbol: DIG0_PA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DIG0_PA unused
DIG0_PQ 0000000F

Symbol: DIG0_PQ
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: DIG0_PQ unused
DIG1_PA 00000000

Symbol: DIG1_PA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DIG1_PA unused
DIG1_PQ 00000006

Symbol: DIG1_PQ
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: DIG1_PQ unused
DIG2_PA 00000050

Symbol: DIG2_PA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DIG2_PA unused
DIG2_PQ 0000000B

Symbol: DIG2_PQ
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DIG2_PQ unused
DIG3_PA 00000040

Symbol: DIG3_PA
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: DIG3_PA unused
DIG3_PQ 0000000F

Symbol: DIG3_PQ



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DIG3_PQ unused
DIG4_PA 00000060

Symbol: DIG4_PA
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: DIG4_PA unused
DIG4_PQ 00000006

Symbol: DIG4_PQ
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: DIG4_PQ unused
DIG5_PA 00000060

Symbol: DIG5_PA
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: DIG5_PA unused
DIG5_PQ 0000000D

Symbol: DIG5_PQ
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: DIG5_PQ unused
DIG6_PA 00000070

Symbol: DIG6_PA
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: DIG6_PA unused
DIG6_PQ 0000000D

Symbol: DIG6_PQ
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: DIG6_PQ unused
DIG7_PA 00000000

Symbol: DIG7_PA
   Definitions
      At line 32 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: DIG7_PA unused
DIG7_PQ 00000007

Symbol: DIG7_PQ
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: DIG7_PQ unused
DIG8_PA 00000070

Symbol: DIG8_PA
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: DIG8_PA unused
DIG8_PQ 0000000F

Symbol: DIG8_PQ
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: DIG8_PQ unused
DIG9_PA 00000060

Symbol: DIG9_PA
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DIG9_PA unused
DIG9_PQ 00000007

Symbol: DIG9_PQ
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: DIG9_PQ unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Digito_0 00000000

Symbol: Digito_0
   Definitions
      At line 70 in file main.s
   Uses
      None
Comment: Digito_0 unused
Digito_1 00000000

Symbol: Digito_1
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: Digito_1 unused
Digito_2 00000000

Symbol: Digito_2
   Definitions
      At line 72 in file main.s
   Uses
      None
Comment: Digito_2 unused
Digito_3 00000000

Symbol: Digito_3
   Definitions
      At line 73 in file main.s
   Uses
      None
Comment: Digito_3 unused
Digito_4 00000000

Symbol: Digito_4
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: Digito_4 unused
Digito_5 00000000

Symbol: Digito_5
   Definitions
      At line 75 in file main.s
   Uses
      None
Comment: Digito_5 unused
Digito_6 00000000

Symbol: Digito_6
   Definitions
      At line 76 in file main.s
   Uses
      None
Comment: Digito_6 unused
Digito_7 00000000

Symbol: Digito_7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 77 in file main.s
   Uses
      None
Comment: Digito_7 unused
Digito_8 00000000

Symbol: Digito_8
   Definitions
      At line 78 in file main.s
   Uses
      None
Comment: Digito_8 unused
Digito_9 00000000

Symbol: Digito_9
   Definitions
      At line 79 in file main.s
   Uses
      None
Comment: Digito_9 unused
Display_Dezena 00000000

Symbol: Display_Dezena
   Definitions
      At line 80 in file main.s
   Uses
      At line 100 in file main.s
Comment: Display_Dezena used once
Display_Unidade 00000000

Symbol: Display_Unidade
   Definitions
      At line 81 in file main.s
   Uses
      At line 101 in file main.s
Comment: Display_Unidade used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 63 in file main.s
   Uses
      At line 89 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 60 in file main.s
   Uses
      At line 87 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 64 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 159 in file main.s
      At line 166 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 68 in file main.s
   Uses
      At line 107 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 67 in file main.s
   Uses
      At line 157 in file main.s
      At line 164 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 88 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 62 in file main.s
   Uses
      At line 162 in file main.s
      At line 168 in file main.s

21 symbols
384 symbols in table

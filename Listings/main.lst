


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         
    4 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    5 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         
   11 00000000         ; Declarações EQU - Defines
   12 00000000         ;<NOME>         EQU <VALOR>
   13 00000000         ; ========================
   14 00000000         
   15 00000000         ; ------------------------------------------------------
                       -------------------------
   16 00000000         ; Área de Dados - Declarações de variáveis
   17 00000000                 AREA             DATA, ALIGN=2
   18 00000000         ; Se alguma variável for chamada em outro arquivo
   19 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   20 00000000         ; partir de outro arquivo
   21 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   22 00000000         ; de <tam> bytes a partir da primeira 
   23 00000000         ; posição da RAM  
   24 00000000         
   25 00000000         ; ------------------------------------------------------
                       -------------------------
   26 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   27 00000000         ;                  código
   28 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   29 00000000         
   30 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   31 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   32 00000000         ; outro arquivo. No caso startup.s
   33 00000000         
   34 00000000         ; Se chamar alguma função externa 
   35 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   36 00000000         ; função <func>
   37 00000000                 IMPORT           PLL_Init
   38 00000000                 IMPORT           SysTick_Init
   39 00000000                 IMPORT           SysTick_Wait1ms
   40 00000000                 IMPORT           GPIO_Init
   41 00000000                 IMPORT           PortA_Output
   42 00000000                 IMPORT           PortB_Output
   43 00000000                 IMPORT           PortP_Output
   44 00000000                 IMPORT           PortQ_Output



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           PortJ_Input
   46 00000000         
   47 00000000                 IMPORT           Display_Dezena
   48 00000000                 IMPORT           Display_Unidade
   49 00000000                 IMPORT           Led
   50 00000000                 IMPORT           Turn0n_TransistorQ1
   51 00000000                 IMPORT           Turn0ff_TransistorQ1
   52 00000000         
   53 00000000         
   54 00000000         ; ------------------------------------------------------
                       -------------------------
   55 00000000         ; Função main()
   56 00000000         Start
   57 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   58 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   59 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   60 0000000C         
   61 0000000C F04F 0B01       MOV              R11, #1     ;passo da contagem
   62 00000010 F04F 0A00       MOV              R10, #0     ;contador
   63 00000014 F04F 0900       MOV              R9, #0      ;estado --> 0 = fun
                                                            cionando / 1 = paus
                                                            ado
   64 00000018 F04F 0880       MOV              R8, #2_10000000 
                                                            ;estado dos leds
   65 0000001C F04F 0700       MOV              R7, #0      ;direção dos leds -
                                                            -> 0 = indo / 1 = v
                                                            oltando
   66 00000020 F04F 0600       MOV              R6, #0      ;estado anterior ch
                                                            ave 1 --> 0 = desat
                                                            ivado / 1 = ativado
                                                            
   67 00000024 F04F 0500       MOV              R5, #0      ;conta tempo de exi
                                                            bição
   68 00000028         
   69 00000028         MainLoop
   70 00000028         ; ****************************************
   71 00000028         ; Escrever código que lê o estado da chave, se ela estiv
                       er desativada apaga o LED
   72 00000028         ; Se estivar ativada chama a subrotina Pisca_LED
   73 00000028         ; ****************************************
   74 00000028         
   75 00000028         Exibicao
   76 00000028 4650            MOV              R0, R10
   77 0000002A F7FF FFFE       BL               Display_Dezena
   78 0000002E 4650            MOV              R0, R10
   79 00000030 F7FF FFFE       BL               Display_Unidade
   80 00000034 4640            MOV              R0, R8
   81 00000036 F7FF FFFE       BL               Led
   82 0000003A         
   83 0000003A F105 0501       ADD              R5, #1
   84 0000003E 2D50            CMP              R5, #80
   85 00000040 D3F2            BLO              Exibicao



ARM Macro Assembler    Page 3 


   86 00000042         
   87 00000042 F04F 0500       MOV              R5, #0
   88 00000046 F1B9 0F00       CMP              R9, #0
   89 0000004A D117            BNE              Pausado
   90 0000004C         ; se não tiver pausado executa aqui
   91 0000004C         
   92 0000004C 44DA            ADD              R10, R10, R11
   93 0000004E F1BA 0F63       CMP              R10, #99
   94 00000052 BF88            IT               HI
   95 00000054 F04F 0A00       MOVHI            R10, #0
   96 00000058         
   97 00000058 2F00            CMP              R7, #0
   98 0000005A D106            BNE              Led_Voltando
   99 0000005C EA4F 0858       LSR              R8, R8, #1
  100 00000060 F1B8 0F01       CMP              R8, #2_00000001
  101 00000064 BF08            IT               EQ
  102 00000066 2701            MOVEQ            R7, #1
  103 00000068 E005            B                ler_botoes
  104 0000006A         Led_Voltando
  105 0000006A EA4F 0848       LSL              R8, R8, #1
  106 0000006E F1B8 0F80       CMP              R8, #2_10000000
  107 00000072 BF08            IT               EQ
  108 00000074 2700            MOVEQ            R7, #0
  109 00000076         
  110 00000076         ler_botoes
  111 00000076 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
  112 0000007A E002            B                Verifica_Nenhuma
  113 0000007C         
  114 0000007C         Pausado
  115 0000007C F088 08FF       EOR              R8, R8, #2_11111111
  116 00000080 E7D2            B                MainLoop
  117 00000082         
  118 00000082         Verifica_Nenhuma
  119 00000082 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
  120 00000084 D102            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
  121 00000086         ;TODO - Guardar estado das chaves
  122 00000086 F04F 0600       MOV              R6, #0
  123 0000008A E7CD            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
  124 0000008C         Verifica_SW1
  125 0000008C 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
  126 0000008E D10B            BNE              Verifica_SW2 ;Se o teste falhou
                                                            , pula
  127 00000090         ;TODO - Verificar se sw1 já não estava acionado antes
  128 00000090 2E01            CMP              R6, #1
  129 00000092 D006            BEQ              Ativado_Anteriormente



ARM Macro Assembler    Page 4 


  130 00000094         ;TODO - Fazer incremento de passo e análise se é maior q
                       ue 9 para voltar a 1
  131 00000094 F1BB 0F09       CMP              R11, #9
  132 00000098 D301            BLO              Passo_menorque9
  133 0000009A F04F 0B00       MOV              R11, #0
  134 0000009E         Passo_menorque9
  135 0000009E F10B 0B01       ADD              R11, R11, #1
  136 000000A2         Ativado_Anteriormente
  137 000000A2 F04F 0601       MOV              R6, #1
  138 000000A6 E7BF            B                MainLoop    ;Volta para o laço 
                                                            principal
  139 000000A8         
  140 000000A8         Verifica_SW2
  141 000000A8 2801            CMP              R0, #2_00000001 ;Verifica se so
                                                            mente a chave SW2 e
                                                            stá pressionada
  142 000000AA D106            BNE              Verifica_Ambas ;Se o teste falh
                                                            ou, pula
  143 000000AC F04F 0600       MOV              R6, #0
  144 000000B0         ;TODO - Pausar a contagem
  145 000000B0 F04F 0901       MOV              R9, #1
  146 000000B4 F04F 08FF       MOV              R8, #2_11111111
  147 000000B8 E7B6            B                MainLoop    ;Volta para o laço 
                                                            principal 
  148 000000BA         Verifica_Ambas
  149 000000BA 2800            CMP              R0, #2_00000000 ;Verifica se am
                                                            bas as chaves estão
                                                             pressionadas
  150 000000BC D1B4            BNE              MainLoop    ;Se o teste falhou,
                                                             pula
  151 000000BE         
  152 000000BE E7B3            B                MainLoop    ;Volta para o laço 
                                                            principal
  153 000000C0         
  154 000000C0         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  155 000000C0         ; Fim do Arquivo
  156 000000C0         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  157 000000C0                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  158 000000C0                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\admin\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: .text unused
Ativado_Anteriormente 000000A2

Symbol: Ativado_Anteriormente
   Definitions
      At line 136 in file main.s
   Uses
      At line 129 in file main.s
Comment: Ativado_Anteriormente used once
Exibicao 00000028

Symbol: Exibicao
   Definitions
      At line 75 in file main.s
   Uses
      At line 85 in file main.s
Comment: Exibicao used once
Led_Voltando 0000006A

Symbol: Led_Voltando
   Definitions
      At line 104 in file main.s
   Uses
      At line 98 in file main.s
Comment: Led_Voltando used once
MainLoop 00000028

Symbol: MainLoop
   Definitions
      At line 69 in file main.s
   Uses
      At line 116 in file main.s
      At line 123 in file main.s
      At line 138 in file main.s
      At line 147 in file main.s
      At line 150 in file main.s
      At line 152 in file main.s

Passo_menorque9 0000009E

Symbol: Passo_menorque9
   Definitions
      At line 134 in file main.s
   Uses
      At line 132 in file main.s
Comment: Passo_menorque9 used once
Pausado 0000007C

Symbol: Pausado
   Definitions
      At line 114 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 89 in file main.s
Comment: Pausado used once
Start 00000000

Symbol: Start
   Definitions
      At line 56 in file main.s
   Uses
      At line 31 in file main.s
Comment: Start used once
Verifica_Ambas 000000BA

Symbol: Verifica_Ambas
   Definitions
      At line 148 in file main.s
   Uses
      At line 142 in file main.s
Comment: Verifica_Ambas used once
Verifica_Nenhuma 00000082

Symbol: Verifica_Nenhuma
   Definitions
      At line 118 in file main.s
   Uses
      At line 112 in file main.s
Comment: Verifica_Nenhuma used once
Verifica_SW1 0000008C

Symbol: Verifica_SW1
   Definitions
      At line 124 in file main.s
   Uses
      At line 120 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 000000A8

Symbol: Verifica_SW2
   Definitions
      At line 140 in file main.s
   Uses
      At line 126 in file main.s
Comment: Verifica_SW2 used once
ler_botoes 00000076

Symbol: ler_botoes
   Definitions
      At line 110 in file main.s
   Uses
      At line 103 in file main.s
Comment: ler_botoes used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display_Dezena 00000000

Symbol: Display_Dezena
   Definitions
      At line 47 in file main.s
   Uses
      At line 77 in file main.s
Comment: Display_Dezena used once
Display_Unidade 00000000

Symbol: Display_Unidade
   Definitions
      At line 48 in file main.s
   Uses
      At line 79 in file main.s
Comment: Display_Unidade used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 40 in file main.s
   Uses
      At line 59 in file main.s
Comment: GPIO_Init used once
Led 00000000

Symbol: Led
   Definitions
      At line 49 in file main.s
   Uses
      At line 81 in file main.s
Comment: Led used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 37 in file main.s
   Uses
      At line 57 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: PortA_Output unused
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 45 in file main.s
   Uses
      At line 111 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: PortQ_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 58 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
Turn0ff_TransistorQ1 00000000

Symbol: Turn0ff_TransistorQ1
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: Turn0ff_TransistorQ1 unused
Turn0n_TransistorQ1 00000000

Symbol: Turn0n_TransistorQ1
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: Turn0n_TransistorQ1 unused
14 symbols
362 symbols in table

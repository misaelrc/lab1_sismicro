


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         
   17 00000000 0000000F 
                       DIG0_PQ EQU              2_1111
   18 00000000 00000030 
                       DIG0_PA EQU              2_00110000
   19 00000000 00000006 
                       DIG1_PQ EQU              2_0110
   20 00000000 00000000 
                       DIG1_PA EQU              2_00000000
   21 00000000 0000000B 
                       DIG2_PQ EQU              2_1011
   22 00000000 00000050 
                       DIG2_PA EQU              2_01010000
   23 00000000 0000000F 
                       DIG3_PQ EQU              2_1111
   24 00000000 00000040 
                       DIG3_PA EQU              2_01000000
   25 00000000 00000006 
                       DIG4_PQ EQU              2_0110
   26 00000000 00000060 
                       DIG4_PA EQU              2_01100000
   27 00000000 0000000D 
                       DIG5_PQ EQU              2_1101
   28 00000000 00000060 
                       DIG5_PA EQU              2_01100000
   29 00000000 0000000D 
                       DIG6_PQ EQU              2_1101
   30 00000000 00000070 
                       DIG6_PA EQU              2_01110000
   31 00000000 00000007 
                       DIG7_PQ EQU              2_0111
   32 00000000 00000000 
                       DIG7_PA EQU              2_00000000
   33 00000000 0000000F 
                       DIG8_PQ EQU              2_1111
   34 00000000 00000070 
                       DIG8_PA EQU              2_01110000
   35 00000000 00000007 
                       DIG9_PQ EQU              2_0111



ARM Macro Assembler    Page 2 


   36 00000000 00000060 
                       DIG9_PA EQU              2_01100000
   37 00000000         
   38 00000000         ; ------------------------------------------------------
                       -------------------------
   39 00000000         ; Área de Dados - Declarações de variáveis
   40 00000000                 AREA             DATA, ALIGN=2
   41 00000000         ; Se alguma variável for chamada em outro arquivo
   42 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   43 00000000         ; partir de outro arquivo
   44 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   45 00000000         ; de <tam> bytes a partir da primeira 
   46 00000000         ; posição da RAM  
   47 00000000         
   48 00000000         ; ------------------------------------------------------
                       -------------------------
   49 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   50 00000000         ;                  código
   51 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000         
   53 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   54 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   55 00000000         ; outro arquivo. No caso startup.s
   56 00000000         
   57 00000000         ; Se chamar alguma função externa 
   58 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   59 00000000         ; função <func>
   60 00000000                 IMPORT           PLL_Init
   61 00000000                 IMPORT           SysTick_Init
   62 00000000                 IMPORT           SysTick_Wait1ms
   63 00000000                 IMPORT           GPIO_Init
   64 00000000                 IMPORT           PortA_Output
   65 00000000                 IMPORT           PortB_Output
   66 00000000                 IMPORT           PortP_Output
   67 00000000                 IMPORT           PortQ_Output
   68 00000000                 IMPORT           PortJ_Input
   69 00000000         
   70 00000000                 IMPORT           Digito_0
   71 00000000                 IMPORT           Digito_1
   72 00000000                 IMPORT           Digito_2
   73 00000000                 IMPORT           Digito_3
   74 00000000                 IMPORT           Digito_4
   75 00000000                 IMPORT           Digito_5
   76 00000000                 IMPORT           Digito_6
   77 00000000                 IMPORT           Digito_7
   78 00000000                 IMPORT           Digito_8
   79 00000000                 IMPORT           Digito_9
   80 00000000                 IMPORT           Display_Dezena
   81 00000000                 IMPORT           Display_Unidade
   82 00000000                 IMPORT           Turn0n_TransistorQ1
   83 00000000                 IMPORT           Turn0ff_TransistorQ1



ARM Macro Assembler    Page 3 


   84 00000000         
   85 00000000         
   86 00000000         ; ------------------------------------------------------
                       -------------------------
   87 00000000         ; Função main()
   88 00000000         Start
   89 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   90 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   91 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   92 0000000C         
   93 0000000C F04F 0B01       MOV              R11, #1     ;passo da contagem
   94 00000010 F04F 0A00       MOV              R10, #0     ;contador
   95 00000014 F04F 0900       MOV              R9, #0      ;estado --> 0 = fun
                                                            cionando / 1 = paus
                                                            ado
   96 00000018 F04F 0880       MOV              R8, #2_10000000 
                                                            ;estado dos leds
   97 0000001C         
   98 0000001C F04F 0500       MOV              R5, #0      ;conta tempo de exi
                                                            bição
   99 00000020         
  100 00000020         MainLoop
  101 00000020         ; ****************************************
  102 00000020         ; Escrever código que lê o estado da chave, se ela estiv
                       er desativada apaga o LED
  103 00000020         ; Se estivar ativada chama a subrotina Pisca_LED
  104 00000020         ; ****************************************
  105 00000020         
  106 00000020         Exibicao
  107 00000020 F7FF FFFE       BL               Display_Dezena
  108 00000024 F7FF FFFE       BL               Display_Unidade
  109 00000028 F000 F821       BL               Led
  110 0000002C         
  111 0000002C F105 0501       ADD              R5, #1
  112 00000030 2DC8            CMP              R5, #200
  113 00000032 D3F5            BLO              Exibicao
  114 00000034         
  115 00000034 F04F 0500       MOV              R5, #0
  116 00000038 F1B9 0F00       CMP              R9, #0
  117 0000003C D1F0            BNE              Exibicao
  118 0000003E         ; se não tiver pausado executa aqui
  119 0000003E F1BA 0F63       CMP              R10, #99
  120 00000042 BF8C            ITE              HI
  121 00000044 F04F 0A00       MOVHI            R10, #0
  122 00000048 44DA            ADDLS            R10, R10, R11
  123 0000004A         
  124 0000004A         
  125 0000004A F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
  126 0000004E E002            B                Verifica_Nenhuma



ARM Macro Assembler    Page 4 


  127 00000050         
  128 00000050         Pausado
  129 00000050         ;TODO - verificar estado
  130 00000050         ;se tiver pausado, piscar o led e ficar em loop
  131 00000050         ; se não, fazer os incrementos de contagem e led andando
                       
  132 00000050         
  133 00000050         
  134 00000050         ;BL PortJ_Input
  135 00000050 F000 F820       BL               Pisca_Led
  136 00000054 E7E4            B                MainLoop
  137 00000056         
  138 00000056         Verifica_Nenhuma
  139 00000056 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
  140 00000058 D100            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
  141 0000005A         ;TODO - Guardar estado das chaves
  142 0000005A E7E1            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
  143 0000005C         Verifica_SW1
  144 0000005C 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
  145 0000005E D100            BNE              Verifica_SW2 ;Se o teste falhou
                                                            , pula
  146 00000060         ;TODO - Verificar se sw1 já não estava acionado antes
  147 00000060         ;TODO - Fazer incremento de passo e análise se é maior q
                       ue 9 para voltar a 1
  148 00000060 E7DE            B                MainLoop    ;Volta para o laço 
                                                            principal
  149 00000062         Verifica_SW2
  150 00000062 2801            CMP              R0, #2_00000001 ;Verifica se so
                                                            mente a chave SW2 e
                                                            stá pressionada
  151 00000064 D100            BNE              Verifica_Ambas ;Se o teste falh
                                                            ou, pula
  152 00000066         ;TODO - Verificar se sw2 já não estava acionado antes
  153 00000066         ;TODO - Pausar a contagem
  154 00000066 E7DB            B                MainLoop    ;Volta para o laço 
                                                            principal 
  155 00000068         Verifica_Ambas
  156 00000068 2800            CMP              R0, #2_00000000 ;Verifica se am
                                                            bas as chaves estão
                                                             pressionadas
  157 0000006A D1D9            BNE              MainLoop    ;Se o teste falhou,
                                                             pula
  158 0000006C         
  159 0000006C E7D8            B                MainLoop    ;Volta para o laço 
                                                            principal
  160 0000006E         ; MOV R0, #2_00100000 
  161 0000006E         ; BL PortB_Output 
  162 0000006E         ; 



ARM Macro Assembler    Page 5 


  163 0000006E         ; BL Digito_0
  164 0000006E         ; BL Digito_1
  165 0000006E         ; BL Digito_2
  166 0000006E         ; BL Digito_3
  167 0000006E         ; BL Digito_4
  168 0000006E         ; BL Digito_5
  169 0000006E         ; BL Digito_6
  170 0000006E         ; BL Digito_7
  171 0000006E         ; BL Digito_8
  172 0000006E         ; BL Digito_9
  173 0000006E         ; B MainLoop
  174 0000006E         
  175 0000006E         
  176 0000006E         
  177 0000006E         
  178 0000006E         
  179 0000006E         
  180 0000006E         
  181 0000006E         ; Função Led
  182 0000006E         ; Parâmetro de entrada: Não tem
  183 0000006E         ; Parâmetro de saída: Não tem
  184 0000006E         *********************************
  185 0000006E         Led
  186 0000006E B500            PUSH             {LR}
  187 00000070 F7FF FFFE       BL               Turn0n_TransistorQ1 ;Chamar a f
                                                            unção para setar o 
                                                            transistor Q1
  188 00000074         
  189 00000074 4640            MOV              R0, R8
  190 00000076         
  191 00000076 F000 F829       BL               BitsToLed   ;Chamar a função pa
                                                            ra pegar o valor do
                                                            s bits de R0 e liga
                                                            r os leds correspon
                                                            dentes
  192 0000007A         
  193 0000007A F04F 0001       MOV              R0, #1      ;Chamar a rotina pa
                                                            ra esperar 1ms
  194 0000007E F7FF FFFE       BL               SysTick_Wait1ms
  195 00000082         
  196 00000082 F7FF FFFE       BL               Turn0ff_TransistorQ1 ;Chamar a 
                                                            função para resetar
                                                             o transistor Q1
  197 00000086         
  198 00000086 F04F 0001       MOV              R0, #1      ;Chamar a rotina pa
                                                            ra esperar 1ms
  199 0000008A F7FF FFFE       BL               SysTick_Wait1ms
  200 0000008E         
  201 0000008E F85D EB04       POP              {LR}
  202 00000092 4770            BX               LR
  203 00000094         
  204 00000094         ; Função Pisca_Led
  205 00000094         ; Parâmetro de entrada: Não tem
  206 00000094         ; Parâmetro de saída: Não tem
  207 00000094         *********************************
  208 00000094         Pisca_Led
  209 00000094 B500            PUSH             {LR}
  210 00000096 F04F 000F       MOV              R0, #2_1111 ;Setar o parâmetro 
                                                            de entrada da funçã



ARM Macro Assembler    Page 6 


                                                            o setando os bits [
                                                            Q3-Q0]
  211 0000009A F7FF FFFE       BL               PortQ_Output ;Chamar a função p
                                                            ara acender os LEDs
                                                             5, 6, 7 e 8
  212 0000009E F04F 000F       MOV              R0, #2_1111 ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o setando os bits [
                                                            A7-A4]
  213 000000A2 F7FF FFFE       BL               PortA_Output ;Chamar a função p
                                                            ara acender os LEDs
                                                             1, 2, 3 e 4
  214 000000A6         
  215 000000A6 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 500ms
  216 000000AA F7FF FFFE       BL               SysTick_Wait1ms
  217 000000AE F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando os bits 
                                                            [Q3-Q0]
  218 000000B2 F7FF FFFE       BL               PortQ_Output ;Chamar a rotina p
                                                            ara apagar os LEDs 
                                                            5, 6, 7 e 8
  219 000000B6 F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando os bits 
                                                            [A7-A4]
  220 000000BA F7FF FFFE       BL               PortA_Output ;Chamar a rotina p
                                                            ara apagar os LEDs 
                                                            1, 2, 3 e 4
  221 000000BE F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 500ms
  222 000000C2 F7FF FFFE       BL               SysTick_Wait1ms
  223 000000C6 F85D EB04       POP              {LR}
  224 000000CA 4770            BX               LR
  225 000000CC         
  226 000000CC         ;-------------------------------------------------------
                       -------------------------
  227 000000CC         ; BinarioToDigito
  228 000000CC         ; Parâmetro de entrada: R0 --> bits para ligar LEDs corr
                       espondentes
  229 000000CC         ; Parâmetro de saída: Não tem
  230 000000CC         *********************************
  231 000000CC         BitsToLed
  232 000000CC B500            PUSH{LR}
  233 000000CE 4601            MOV              R1, R0
  234 000000D0         
  235 000000D0 F001 00F0       AND              R0, R1, #2_11110000
  236 000000D4 F7FF FFFE       BL               PortA_Output
  237 000000D8         
  238 000000D8 F001 000F       AND              R0, R1, #2_00001111
  239 000000DC F7FF FFFE       BL               PortQ_Output
  240 000000E0         
  241 000000E0 2800            CMP              R0, #0
  242 000000E2 BF08 F7FF 
              FFFE             BLEQ             Digito_0
  243 000000E8 2801            CMP              R0, #1
  244 000000EA BF08 F7FF 
              FFFE             BLEQ             Digito_1



ARM Macro Assembler    Page 7 


  245 000000F0 2802            CMP              R0, #2
  246 000000F2 BF08 F7FF 
              FFFE             BLEQ             Digito_2
  247 000000F8 2803            CMP              R0, #3
  248 000000FA BF08 F7FF 
              FFFE             BLEQ             Digito_3
  249 00000100 2804            CMP              R0, #4
  250 00000102 BF08 F7FF 
              FFFE             BLEQ             Digito_4
  251 00000108 2805            CMP              R0, #5
  252 0000010A BF08 F7FF 
              FFFE             BLEQ             Digito_5
  253 00000110 2806            CMP              R0, #6
  254 00000112 BF08 F7FF 
              FFFE             BLEQ             Digito_6
  255 00000118 2807            CMP              R0, #7
  256 0000011A BF08 F7FF 
              FFFE             BLEQ             Digito_7
  257 00000120 2808            CMP              R0, #8
  258 00000122 BF08 F7FF 
              FFFE             BLEQ             Digito_8
  259 00000128 2809            CMP              R0, #9
  260 0000012A BF08 F7FF 
              FFFE             BLEQ             Digito_9
  261 00000130 F85D EB04       POP{LR}
  262 00000134 4770            BX               LR
  263 00000136         
  264 00000136         ; APAGAR FUNCOES COMENTADAS
  265 00000136         
  266 00000136         ;-------------------------------------------------------
                       -------------------------
  267 00000136         ; Função Digito_0
  268 00000136         ; Parâmetro de entrada: Não tem
  269 00000136         ; Parâmetro de saída: Não tem
  270 00000136         *********************************
  271 00000136         ;Digito_0
  272 00000136         ; PUSH{LR}
  273 00000136         ; MOV R0, #DIG0_PQ 
  274 00000136         ; BL PortQ_Output 
  275 00000136         ; MOV R0, #DIG0_PA 
  276 00000136         ; BL PortA_Output 
  277 00000136         ; POP{LR}
  278 00000136         ; BX LR
  279 00000136         
  280 00000136         ;-------------------------------------------------------
                       -------------------------
  281 00000136         ; Função Digito_1
  282 00000136         ; Parâmetro de entrada: Não tem
  283 00000136         ; Parâmetro de saída: Não tem
  284 00000136         *********************************
  285 00000136         ;Digito_1
  286 00000136         ; PUSH{LR}
  287 00000136         ; MOV R0, #DIG1_PQ 
  288 00000136         ; BL PortQ_Output 
  289 00000136         ; MOV R0, #DIG1_PA 
  290 00000136         ; BL PortA_Output 
  291 00000136         ; POP{LR}
  292 00000136         ; BX LR
  293 00000136         



ARM Macro Assembler    Page 8 


  294 00000136         ;-------------------------------------------------------
                       -------------------------
  295 00000136         ; Função Digito_2
  296 00000136         ; Parâmetro de entrada: Não tem
  297 00000136         ; Parâmetro de saída: Não tem
  298 00000136         *********************************
  299 00000136         ;Digito_2
  300 00000136         ; PUSH{LR}
  301 00000136         ; MOV R0, #DIG2_PQ 
  302 00000136         ; BL PortQ_Output 
  303 00000136         ; MOV R0, #DIG2_PA 
  304 00000136         ; BL PortA_Output 
  305 00000136         ; POP{LR}
  306 00000136         ; BX LR
  307 00000136         
  308 00000136         ;-------------------------------------------------------
                       -------------------------
  309 00000136         ; Função Digito_3
  310 00000136         ; Parâmetro de entrada: Não tem
  311 00000136         ; Parâmetro de saída: Não tem
  312 00000136         *********************************
  313 00000136         ;Digito_3
  314 00000136         ; PUSH{LR}
  315 00000136         ; MOV R0, #DIG3_PQ 
  316 00000136         ; BL PortQ_Output 
  317 00000136         ; MOV R0, #DIG3_PA 
  318 00000136         ; BL PortA_Output 
  319 00000136         ; POP{LR}
  320 00000136         ; BX LR
  321 00000136         
  322 00000136         ;-------------------------------------------------------
                       -------------------------
  323 00000136         ; Função Digito_4
  324 00000136         ; Parâmetro de entrada: Não tem
  325 00000136         ; Parâmetro de saída: Não tem
  326 00000136         *********************************
  327 00000136         ;Digito_4
  328 00000136         ; PUSH{LR}
  329 00000136         ; MOV R0, #DIG4_PQ 
  330 00000136         ; BL PortQ_Output 
  331 00000136         ; MOV R0, #DIG4_PA 
  332 00000136         ; BL PortA_Output 
  333 00000136         ; POP{LR}
  334 00000136         ; BX LR
  335 00000136         
  336 00000136         ;-------------------------------------------------------
                       -------------------------
  337 00000136         ; Função Digito_5
  338 00000136         ; Parâmetro de entrada: Não tem
  339 00000136         ; Parâmetro de saída: Não tem
  340 00000136         *********************************
  341 00000136         ;Digito_5
  342 00000136         ; PUSH{LR}
  343 00000136         ; MOV R0, #DIG5_PQ 
  344 00000136         ; BL PortQ_Output 
  345 00000136         ; MOV R0, #DIG5_PA 
  346 00000136         ; BL PortA_Output 
  347 00000136         ; POP{LR}
  348 00000136         ; BX LR



ARM Macro Assembler    Page 9 


  349 00000136         ; 
  350 00000136         ;-------------------------------------------------------
                       -------------------------
  351 00000136         ; Função Digito_6
  352 00000136         ; Parâmetro de entrada: Não tem
  353 00000136         ; Parâmetro de saída: Não tem
  354 00000136         *********************************
  355 00000136         ;Digito_6
  356 00000136         ; PUSH{LR}
  357 00000136         ; MOV R0, #DIG6_PQ 
  358 00000136         ; BL PortQ_Output 
  359 00000136         ; MOV R0, #DIG6_PA 
  360 00000136         ; BL PortA_Output 
  361 00000136         ; POP{LR}
  362 00000136         ; BX LR
  363 00000136         
  364 00000136         ;-------------------------------------------------------
                       -------------------------
  365 00000136         ; Função Digito_7
  366 00000136         ; Parâmetro de entrada: Não tem
  367 00000136         ; Parâmetro de saída: Não tem
  368 00000136         *********************************
  369 00000136         ;Digito_7
  370 00000136         ; PUSH{LR}
  371 00000136         ; MOV R0, #DIG7_PQ 
  372 00000136         ; BL PortQ_Output 
  373 00000136         ; MOV R0, #DIG7_PA 
  374 00000136         ; BL PortA_Output 
  375 00000136         ; POP{LR}
  376 00000136         ; BX LR
  377 00000136         
  378 00000136         ;-------------------------------------------------------
                       -------------------------
  379 00000136         ; Função Digito_8
  380 00000136         ; Parâmetro de entrada: Não tem
  381 00000136         ; Parâmetro de saída: Não tem
  382 00000136         *********************************
  383 00000136         ;Digito_8
  384 00000136         ; PUSH{LR}
  385 00000136         ; MOV R0, #DIG8_PQ 
  386 00000136         ; BL PortQ_Output 
  387 00000136         ; MOV R0, #DIG8_PA 
  388 00000136         ; BL PortA_Output 
  389 00000136         ; POP{LR}
  390 00000136         ; BX LR
  391 00000136         
  392 00000136         ;-------------------------------------------------------
                       -------------------------
  393 00000136         ; Função Digito_9
  394 00000136         ; Parâmetro de entrada: Não tem
  395 00000136         ; Parâmetro de saída: Não tem
  396 00000136         *********************************
  397 00000136         ;Digito_9
  398 00000136         ; PUSH{LR}
  399 00000136         ; MOV R0, #DIG9_PQ 
  400 00000136         ; BL PortQ_Output 
  401 00000136         ; MOV R0, #DIG9_PA 
  402 00000136         ; BL PortA_Output 
  403 00000136         ; POP{LR}



ARM Macro Assembler    Page 10 


  404 00000136         ; BX LR
  405 00000136         
  406 00000136         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  407 00000136         ; Fim do Arquivo
  408 00000136         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  409 00000136 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  410 00000138                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\admin\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: .text unused
BitsToLed 000000CC

Symbol: BitsToLed
   Definitions
      At line 231 in file main.s
   Uses
      At line 191 in file main.s
Comment: BitsToLed used once
Exibicao 00000020

Symbol: Exibicao
   Definitions
      At line 106 in file main.s
   Uses
      At line 113 in file main.s
      At line 117 in file main.s

Led 0000006E

Symbol: Led
   Definitions
      At line 185 in file main.s
   Uses
      At line 109 in file main.s
Comment: Led used once
MainLoop 00000020

Symbol: MainLoop
   Definitions
      At line 100 in file main.s
   Uses
      At line 136 in file main.s
      At line 142 in file main.s
      At line 148 in file main.s
      At line 154 in file main.s
      At line 157 in file main.s
      At line 159 in file main.s

Pausado 00000050

Symbol: Pausado
   Definitions
      At line 128 in file main.s
   Uses
      None
Comment: Pausado unused
Pisca_Led 00000094

Symbol: Pisca_Led
   Definitions
      At line 208 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 135 in file main.s
Comment: Pisca_Led used once
Start 00000000

Symbol: Start
   Definitions
      At line 88 in file main.s
   Uses
      At line 54 in file main.s
Comment: Start used once
Verifica_Ambas 00000068

Symbol: Verifica_Ambas
   Definitions
      At line 155 in file main.s
   Uses
      At line 151 in file main.s
Comment: Verifica_Ambas used once
Verifica_Nenhuma 00000056

Symbol: Verifica_Nenhuma
   Definitions
      At line 138 in file main.s
   Uses
      At line 126 in file main.s
Comment: Verifica_Nenhuma used once
Verifica_SW1 0000005C

Symbol: Verifica_SW1
   Definitions
      At line 143 in file main.s
   Uses
      At line 140 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 00000062

Symbol: Verifica_SW2
   Definitions
      At line 149 in file main.s
   Uses
      At line 145 in file main.s
Comment: Verifica_SW2 used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIG0_PA 00000030

Symbol: DIG0_PA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DIG0_PA unused
DIG0_PQ 0000000F

Symbol: DIG0_PQ
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: DIG0_PQ unused
DIG1_PA 00000000

Symbol: DIG1_PA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DIG1_PA unused
DIG1_PQ 00000006

Symbol: DIG1_PQ
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: DIG1_PQ unused
DIG2_PA 00000050

Symbol: DIG2_PA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DIG2_PA unused
DIG2_PQ 0000000B

Symbol: DIG2_PQ
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DIG2_PQ unused
DIG3_PA 00000040

Symbol: DIG3_PA
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: DIG3_PA unused
DIG3_PQ 0000000F

Symbol: DIG3_PQ



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DIG3_PQ unused
DIG4_PA 00000060

Symbol: DIG4_PA
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: DIG4_PA unused
DIG4_PQ 00000006

Symbol: DIG4_PQ
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: DIG4_PQ unused
DIG5_PA 00000060

Symbol: DIG5_PA
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: DIG5_PA unused
DIG5_PQ 0000000D

Symbol: DIG5_PQ
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: DIG5_PQ unused
DIG6_PA 00000070

Symbol: DIG6_PA
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: DIG6_PA unused
DIG6_PQ 0000000D

Symbol: DIG6_PQ
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: DIG6_PQ unused
DIG7_PA 00000000

Symbol: DIG7_PA
   Definitions
      At line 32 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: DIG7_PA unused
DIG7_PQ 00000007

Symbol: DIG7_PQ
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: DIG7_PQ unused
DIG8_PA 00000070

Symbol: DIG8_PA
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: DIG8_PA unused
DIG8_PQ 0000000F

Symbol: DIG8_PQ
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: DIG8_PQ unused
DIG9_PA 00000060

Symbol: DIG9_PA
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DIG9_PA unused
DIG9_PQ 00000007

Symbol: DIG9_PQ
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: DIG9_PQ unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Digito_0 00000000

Symbol: Digito_0
   Definitions
      At line 70 in file main.s
   Uses
      At line 242 in file main.s
Comment: Digito_0 used once
Digito_1 00000000

Symbol: Digito_1
   Definitions
      At line 71 in file main.s
   Uses
      At line 244 in file main.s
Comment: Digito_1 used once
Digito_2 00000000

Symbol: Digito_2
   Definitions
      At line 72 in file main.s
   Uses
      At line 246 in file main.s
Comment: Digito_2 used once
Digito_3 00000000

Symbol: Digito_3
   Definitions
      At line 73 in file main.s
   Uses
      At line 248 in file main.s
Comment: Digito_3 used once
Digito_4 00000000

Symbol: Digito_4
   Definitions
      At line 74 in file main.s
   Uses
      At line 250 in file main.s
Comment: Digito_4 used once
Digito_5 00000000

Symbol: Digito_5
   Definitions
      At line 75 in file main.s
   Uses
      At line 252 in file main.s
Comment: Digito_5 used once
Digito_6 00000000

Symbol: Digito_6
   Definitions
      At line 76 in file main.s
   Uses
      At line 254 in file main.s
Comment: Digito_6 used once
Digito_7 00000000

Symbol: Digito_7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 77 in file main.s
   Uses
      At line 256 in file main.s
Comment: Digito_7 used once
Digito_8 00000000

Symbol: Digito_8
   Definitions
      At line 78 in file main.s
   Uses
      At line 258 in file main.s
Comment: Digito_8 used once
Digito_9 00000000

Symbol: Digito_9
   Definitions
      At line 79 in file main.s
   Uses
      At line 260 in file main.s
Comment: Digito_9 used once
Display_Dezena 00000000

Symbol: Display_Dezena
   Definitions
      At line 80 in file main.s
   Uses
      At line 107 in file main.s
Comment: Display_Dezena used once
Display_Unidade 00000000

Symbol: Display_Unidade
   Definitions
      At line 81 in file main.s
   Uses
      At line 108 in file main.s
Comment: Display_Unidade used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 63 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 60 in file main.s
   Uses
      At line 89 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 64 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 213 in file main.s
      At line 220 in file main.s
      At line 236 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 68 in file main.s
   Uses
      At line 125 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 67 in file main.s
   Uses
      At line 211 in file main.s
      At line 218 in file main.s
      At line 239 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 90 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 62 in file main.s
   Uses
      At line 194 in file main.s
      At line 199 in file main.s
      At line 216 in file main.s
      At line 222 in file main.s

Turn0ff_TransistorQ1 00000000




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols

Symbol: Turn0ff_TransistorQ1
   Definitions
      At line 83 in file main.s
   Uses
      At line 196 in file main.s
Comment: Turn0ff_TransistorQ1 used once
Turn0n_TransistorQ1 00000000

Symbol: Turn0n_TransistorQ1
   Definitions
      At line 82 in file main.s
   Uses
      At line 187 in file main.s
Comment: Turn0n_TransistorQ1 used once
23 symbols
390 symbols in table
